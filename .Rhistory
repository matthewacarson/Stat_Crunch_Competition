Twitch_not_partnered)
twitch_sample_logit <-
Twitch23_sample |>  glm(
family = 'binomial',
formula = Partnered ~ sqrt(Mean.weekly.stream.hours)
)
# Example: Visualization
ggplot(Twitch23_sample, aes(x = Mean.weekly.stream.hours, y = Partnered)) +
geom_point(position = position_jitter(height = 0.05, seed = 12)) +
geom_smooth(method = "glm", se = FALSE, method.args = list(family = "binomial")) +
# labs(x = "Predictor Variable 1", y = "Predicted Probability") +
ggtitle("Logistic Regression Visualization")
logit_plot <- function() {
# Outliers <-  as.logical(Twitch23$Include) # rep(TRUE, 900)
Outliers <-  Twitch23$Mean.weekly.stream.hours <= 60 # rep(TRUE, 900)
Twitch_partnered <- Twitch23[as.logical(Twitch23$Partnered) & Outliers,]
Twitch_not_partnered <- Twitch23[!Twitch23$Partnered & Outliers,]
# set.seed(123)
partnered_sample_rows <- sample(1:nrow(Twitch_partnered), size = nrow(Twitch_not_partnered) * 2)
Twitch23_sample <-
rbind(
Twitch_partnered[partnered_sample_rows,],
Twitch_not_partnered)
ggplot(Twitch23_sample, aes(x = Mean.weekly.stream.hours, y = Partnered)) +
geom_point(position = position_jitter(height = 0.05, seed = 12)) +
geom_smooth(method = "glm", se = FALSE, method.args = list(family = "binomial")) +
# labs(x = "Predictor Variable 1", y = "Predicted Probability") +
ggtitle("Logistic Regression Visualization")
}
logit_plot()
logit_plot()
logit_plot()
logit_plot()
logit_plot()
logit_plot()
logit_plot()
logit_plot <- function(max_hrs = 60) {
# Outliers <-  as.logical(Twitch23$Include) # rep(TRUE, 900)
Outliers <-  Twitch23$Mean.weekly.stream.hours <= max_hours # rep(TRUE, 900)
Twitch_partnered <- Twitch23[as.logical(Twitch23$Partnered) & Outliers,]
Twitch_not_partnered <- Twitch23[!Twitch23$Partnered & Outliers,]
# set.seed(123)
partnered_sample_rows <- sample(1:nrow(Twitch_partnered), size = nrow(Twitch_not_partnered) * 2)
Twitch23_sample <-
rbind(
Twitch_partnered[partnered_sample_rows,],
Twitch_not_partnered)
ggplot(Twitch23_sample, aes(x = Mean.weekly.stream.hours, y = Partnered)) +
geom_point(position = position_jitter(height = 0.05, seed = 12)) +
geom_smooth(method = "glm", se = FALSE, method.args = list(family = "binomial")) +
# labs(x = "Predictor Variable 1", y = "Predicted Probability") +
ggtitle("Logistic Regression Visualization")
}
logit_plot()
Twitch23_sample <-
rbind(
Twitch_partnered[partnered_sample_rows,],
Twitch_not_partnered)
ggplot(Twitch23_sample, aes(x = Mean.weekly.stream.hours, y = Partnered)) +
geom_point(position = position_jitter(height = 0.05, seed = 12)) +
geom_smooth(method = "glm", se = FALSE, method.args = list(family = "binomial")) +
# labs(x = "Predictor Variable 1", y = "Predicted Probability") +
ggtitle("Logistic Regression Visualization")
logit_plot <- function(max_hrs = 60) {
# Outliers <-  as.logical(Twitch23$Include) # rep(TRUE, 900)
Outliers <-  Twitch23$Mean.weekly.stream.hours <= max_hrs # rep(TRUE, 900)
Twitch_partnered <- Twitch23[as.logical(Twitch23$Partnered) & Outliers,]
Twitch_not_partnered <- Twitch23[!Twitch23$Partnered & Outliers,]
# set.seed(123)
partnered_sample_rows <- sample(1:nrow(Twitch_partnered), size = nrow(Twitch_not_partnered) * 2)
Twitch23_sample <-
rbind(
Twitch_partnered[partnered_sample_rows,],
Twitch_not_partnered)
ggplot(Twitch23_sample, aes(x = Mean.weekly.stream.hours, y = Partnered)) +
geom_point(position = position_jitter(height = 0.05, seed = 12)) +
geom_smooth(method = "glm", se = FALSE, method.args = list(family = "binomial")) +
# labs(x = "Predictor Variable 1", y = "Predicted Probability") +
ggtitle("Logistic Regression Visualization")
}
logit_plot()
logit_plot()
logit_plot()
logit_plot()
logit_plot()
logit_plot(99999)
logit_plot(99999)
logit_plot(99999)
logit_plot(99999)
logit_plot(99999)
logit_plot(99999)
logit_plot(99999)
logit_plot(99999)
logit_plot()
logit_plot()
logit_plot()
logit_plot()
logit_plot()
logit_plot()
logit_plot()
logit_plot()
logit_plot()
logit_plot()
logit_plot()
logit_plot()
logit_plot()
1/.2
logit_plot <- function(max_hrs = 60, imbalance = 5) {
# Outliers <-  as.logical(Twitch23$Include) # rep(TRUE, 900)
Outliers <-  Twitch23$Mean.weekly.stream.hours <= max_hrs # rep(TRUE, 900)
Twitch_partnered <- Twitch23[as.logical(Twitch23$Partnered) & Outliers,]
Twitch_not_partnered <- Twitch23[!Twitch23$Partnered & Outliers,]
# set.seed(123)
partnered_sample_rows <- sample(1:nrow(Twitch_partnered), size = nrow(Twitch_not_partnered) * imbalance)
Twitch23_sample <-
rbind(
Twitch_partnered[partnered_sample_rows,],
Twitch_not_partnered)
ggplot(Twitch23_sample, aes(x = Mean.weekly.stream.hours, y = Partnered)) +
geom_point(position = position_jitter(height = 0.05, seed = 12)) +
geom_smooth(method = "glm", se = FALSE, method.args = list(family = "binomial")) +
# labs(x = "Predictor Variable 1", y = "Predicted Probability") +
ggtitle("Logistic Regression Visualization")
}
logit_plot(60, 3)
logit_plot(60, 3)
logit_plot(60, 3)
logit_plot(60, 3)
logit_plot(60, 3)
logit_plot(60, 3)
logit_plot(60, 5)
logit_plot(60, 5)
logit_plot(60, 5)
logit_plot(60, 5)
logit_plot(60, 5)
logit_plot(60, 5)
logit_plot(60, 5)
logit_plot(60, 5)
873/27
# Outliers <-  as.logical(Twitch23$Include) # rep(TRUE, 900)
# Outliers <-  Twitch23$Mean.weekly.stream.hours <= max_hrs # rep(TRUE, 900)
#
Twitch_partnered <- Twitch23[as.logical(Twitch23$Partnered) & Outliers,]
#
Twitch_not_partnered <- Twitch23[!Twitch23$Partnered & Outliers,]
rep(Twitch_not_partnered, 3)
repped <- rep(Twitch_not_partnered, 3)
View(repped)
rm(repped)
logit_plot <- function(max_hrs = 60, imbalance = 5) {
# Outliers <-  as.logical(Twitch23$Include) # rep(TRUE, 900)
# Outliers <-  Twitch23$Mean.weekly.stream.hours <= max_hrs # rep(TRUE, 900)
#
Twitch_partnered <- Twitch23[as.logical(Twitch23$Partnered) & Outliers,]
#
Twitch_not_partnered <- Twitch23[!Twitch23$Partnered & Outliers,]
#
# # set.seed(123)
# partnered_sample_rows <- sample(1:nrow(Twitch_partnered), size = nrow(Twitch_not_partnered) * imbalance)
#
Twitch23_sample <-
rbind(
Twitch_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
)
ggplot(Twitch23_sample, aes(x = Mean.weekly.stream.hours, y = Partnered)) +
geom_point(position = position_jitter(height = 0.05, seed = 12)) +
geom_smooth(method = "glm", se = FALSE, method.args = list(family = "binomial")) +
# labs(x = "Predictor Variable 1", y = "Predicted Probability") +
ggtitle("Logistic Regression Visualization")
}
#
# # set.seed(123)
# partnered_sample_rows <- sample(1:nrow(Twitch_partnered), size = nrow(Twitch_not_partnered) * imbalance)
#
Twitch23_sample <-
rbind(
Twitch_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
)
# Outliers <-  as.logical(Twitch23$Include) # rep(TRUE, 900)
# Outliers <-  Twitch23$Mean.weekly.stream.hours <= max_hrs # rep(TRUE, 900)
#
Twitch_partnered <- Twitch23[as.logical(Twitch23$Partnered) & Outliers,]
#
Twitch_not_partnered <- Twitch23[!Twitch23$Partnered & Outliers,]
#
# # set.seed(123)
# partnered_sample_rows <- sample(1:nrow(Twitch_partnered), size = nrow(Twitch_not_partnered) * imbalance)
#
Twitch23_sample <-
rbind(
Twitch_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
)
rbind(
Twitch_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
)
#
# # set.seed(123)
# partnered_sample_rows <- sample(1:nrow(Twitch_partnered), size = nrow(Twitch_not_partnered) * imbalance)
#
Twitch23_sample <-
rbind(
Twitch_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered
)
ggplot(Twitch23_sample, aes(x = Mean.weekly.stream.hours, y = Partnered)) +
geom_point(position = position_jitter(height = 0.05, seed = 12)) +
geom_smooth(method = "glm", se = FALSE, method.args = list(family = "binomial")) +
# labs(x = "Predictor Variable 1", y = "Predicted Probability") +
ggtitle("Logistic Regression Visualization")
#
# # set.seed(123)
# partnered_sample_rows <- sample(1:nrow(Twitch_partnered), size = nrow(Twitch_not_partnered) * imbalance)
#
Twitch23_sample <-
rbind(
Twitch_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered
)
ggplot(Twitch23_sample, aes(x = Mean.weekly.stream.hours, y = Partnered)) +
geom_point(position = position_jitter(height = 0.05, seed = 12)) +
geom_smooth(method = "glm", se = FALSE, method.args = list(family = "binomial")) +
# labs(x = "Predictor Variable 1", y = "Predicted Probability") +
ggtitle("Logistic Regression Visualization")
#
# # set.seed(123)
# partnered_sample_rows <- sample(1:nrow(Twitch_partnered), size = nrow(Twitch_not_partnered) * imbalance)
#
Twitch23_sample <-
rbind(
Twitch_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered
)
ggplot(Twitch23_sample, aes(x = Mean.weekly.stream.hours, y = Partnered)) +
geom_point(position = position_jitter(height = 0.05, seed = 12)) +
geom_smooth(method = "glm", se = FALSE, method.args = list(family = "binomial")) +
# labs(x = "Predictor Variable 1", y = "Predicted Probability") +
ggtitle("Logistic Regression Visualization")
Outliers <-  as.logical(Twitch23$Include) # rep(TRUE, 900)
# Outliers <-  Twitch23$Mean.weekly.stream.hours <= max_hrs # rep(TRUE, 900)
#
Twitch_partnered <- Twitch23[as.logical(Twitch23$Partnered) & Outliers,]
#
Twitch_not_partnered <- Twitch23[!Twitch23$Partnered & Outliers,]
#
# # set.seed(123)
# partnered_sample_rows <- sample(1:nrow(Twitch_partnered), size = nrow(Twitch_not_partnered) * imbalance)
#
Twitch23_sample <-
rbind(
Twitch_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered
)
ggplot(Twitch23_sample, aes(x = Mean.weekly.stream.hours, y = Partnered)) +
geom_point(position = position_jitter(height = 0.05, seed = 12)) +
geom_smooth(method = "glm", se = FALSE, method.args = list(family = "binomial")) +
# labs(x = "Predictor Variable 1", y = "Predicted Probability") +
ggtitle("Logistic Regression Visualization")
hist(Twitch23_sample$Mean.weekly.stream.hours)
hist(Twitch23_sample$Mean.weekly.stream.hours[Twitch23_sample$Partnered = 0])
hist(Twitch23_sample$Mean.weekly.stream.hours[Twitch23_sample$Partnered == 0])
hist(Twitch23_sample$Mean.weekly.stream.hours[Twitch23_sample$Partnered == 1])
hist(Twitch23_sample$Mean.weekly.stream.hours[Twitch23_sample$Partnered == 0])
hist(Twitch23_sample$Mean.weekly.stream.hours[Twitch23_sample$Partnered == 1])
qqnorm(Twitch23_sample$Mean.weekly.stream.hours[Twitch23_sample$Partnered == 1])
qqline(Twitch23_sample$Mean.weekly.stream.hours[Twitch23_sample$Partnered == 1])
# Outliers <-  as.logical(Twitch23$Include) # rep(TRUE, 900)
Outliers <-  Twitch23$Mean.weekly.stream.hours <= 60 # rep(TRUE, 900)
#
Twitch_partnered <- Twitch23[as.logical(Twitch23$Partnered) & Outliers,]
#
Twitch_not_partnered <- Twitch23[!Twitch23$Partnered & Outliers,]
#
# # set.seed(123)
# partnered_sample_rows <- sample(1:nrow(Twitch_partnered), size = nrow(Twitch_not_partnered) * imbalance)
#
Twitch23_sample <-
rbind(
Twitch_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered
)
ggplot(Twitch23_sample, aes(x = Mean.weekly.stream.hours, y = Partnered)) +
geom_point(position = position_jitter(height = 0.05, seed = 12)) +
geom_smooth(method = "glm", se = FALSE, method.args = list(family = "binomial")) +
# labs(x = "Predictor Variable 1", y = "Predicted Probability") +
ggtitle("Logistic Regression Visualization")
# Outliers <-  as.logical(Twitch23$Include) # rep(TRUE, 900)
Outliers <-  Twitch23$Mean.weekly.stream.hours <= 60 # rep(TRUE, 900)
#
Twitch_partnered <- Twitch23[as.logical(Twitch23$Partnered) & Outliers,]
#
Twitch_not_partnered <- Twitch23[!Twitch23$Partnered & Outliers,]
#
# # set.seed(123)
# partnered_sample_rows <- sample(1:nrow(Twitch_partnered), size = nrow(Twitch_not_partnered) * imbalance)
#
Twitch23_sample <-
rbind(
Twitch_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered
)
ggplot(Twitch23_sample, aes(x = Mean.weekly.stream.hours, y = Partnered)) +
geom_point(position = position_jitter(height = 0.05, seed = 12)) +
geom_smooth(method = "glm", se = FALSE, method.args = list(family = "binomial")) +
# labs(x = "Predictor Variable 1", y = "Predicted Probability") +
ggtitle("Logistic Regression Visualization")
table(Twitch23_sample$Partnered)
(788-625) / 27
#
# # set.seed(123)
# partnered_sample_rows <- sample(1:nrow(Twitch_partnered), size = nrow(Twitch_not_partnered) * imbalance)
#
Twitch23_sample <-
rbind(
Twitch_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered,
Twitch_not_partnered
)
table(Twitch23_sample$Partnered)
775+27
ggplot(Twitch23_sample, aes(x = Mean.weekly.stream.hours, y = Partnered)) +
geom_point(position = position_jitter(height = 0.05, seed = 12)) +
geom_smooth(method = "glm", se = FALSE, method.args = list(family = "binomial")) +
# labs(x = "Predictor Variable 1", y = "Predicted Probability") +
ggtitle("Logistic Regression Visualization")
ggplot(Twitch23_sample, aes(x = Mean.weekly.stream.hours, y = Partnered)) +
geom_point(position = position_jitter(height = 0.15, seed = 12)) +
geom_smooth(method = "glm", se = FALSE, method.args = list(family = "binomial")) +
# labs(x = "Predictor Variable 1", y = "Predicted Probability") +
ggtitle("Logistic Regression Visualization")
ggplot(Twitch23_sample, aes(x = Mean.weekly.stream.hours, y = Partnered)) +
geom_point(position = position_jitter(height = 0.15, seed = 12)) +
geom_smooth(method = "glm", se = FALSE, method.args = list(family = "binomial")) +
geom_hline(0.5)
ggplot(Twitch23_sample, aes(x = Mean.weekly.stream.hours, y = Partnered)) +
geom_point(position = position_jitter(height = 0.15, seed = 12)) +
geom_smooth(method = "glm", se = FALSE, method.args = list(family = "binomial")) +
geom_hline(yintercept = 0.5)
ggplot(Twitch23_sample, aes(x = Mean.weekly.stream.hours, y = Partnered)) +
geom_point(position = position_jitter(height = 0.1, seed = 12)) +
geom_smooth(method = "glm", se = FALSE, method.args = list(family = "binomial")) +
geom_hline(yintercept = 0.5)
ggplot(Twitch23_sample, aes(x = Mean.weekly.stream.hours, y = Partnered)) +
geom_point(position = position_jitter(height = 0.5, seed = 12)) +
geom_smooth(method = "glm", se = FALSE, method.args = list(family = "binomial")) +
geom_hline(yintercept = 0.5)
ggplot(Twitch23_sample, aes(x = Mean.weekly.stream.hours, y = Partnered)) +
geom_point(position = position_jitter(height = 0.05, seed = 12)) +
geom_smooth(method = "glm", se = FALSE, method.args = list(family = "binomial")) +
geom_hline(yintercept = 0.5)
